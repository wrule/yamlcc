
# 无效文本
:invalid: \s*
# 数字
:number: \d+
# 左括号
:lp: \(
# 右括号
:rp: \)
# 标识符
:identifier:
  '[_a-zA-Z][_a-zA-Z\d]*': .end
  .not: $kwd
# 字符串
:string: "('.*?')|(\".*?\")"
# 逗号
:comma: ","
# 关键字
:kwd_if: if
:kwd_then: then
:kwd_elseif: elseif
:kwd_else: else
:kwd_end: end
:kwd_function: function
:kwd_return: return

:kwd:
  - $kwd_if
  - $kwd_then
  - $kwd_elseif
  - $kwd_else
  - $kwd_end
  - $kwd_function
  - $kwd_return

# 运算符
:op:
  :$op_add: \+
  :$op_sub: "-"
  :$op_mul: \*
  :$op_div: "/"
  :$op_gt: ">"
  :$op_ge: ">="
  :$op_lt: "<"
  :$op_le: "<="


# 表达式基本元素
:exps_item:
  $number: .end
  $string: .end
  $identifier: .end

# 表达式
:exps:
  $exps_item:
    $op:
      $exps: 1
    .other: .end
  $lp:
    $exps: $rp




# 函数形参列表
:func_params_form:
  $lp:
    $identifier:
      $comma:
        $identifier: 1
        $rp: .end
      $rp: .end
    $rp: .end

# 函数实参列表
:func_params_real:
  $lp:
    $exps:
      $comma:
        $exps: 1
        $rp: .end
      $rp: .end
    $rp: .end


# 函数定义语句
:cmd_func_def:
  $kwd_function:
    $identifier:
      $func_params_form:
        $block:
          $kwd_end: .end
# 函数调用语句
:cmd_func_call:
  $identifier: $func_params_real
# 函数返回语句
:cmd_return:
  $kwd_return:
    $exps: .end
    .other: .end
# if语句
:cmd_if:
  $kwd_if:
    $exps:
      $kwd_then:
        $block: .end
        #   $kwd_elseif: 3
        #   $kwd_else:
        #     $block:
        #       $kwd_end: .end
        #   $kwd_end: .end
:cmd:
  $cmd_func_def: .end
  $cmd_func_call: .end
  $cmd_return: .end
  $cmd_if: .end

:block:
  $cmd: 0
  .other: .end

$cmd_if: .end




